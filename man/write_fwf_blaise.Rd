% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_fwf_with_model.R
\name{write_fwf_blaise}
\alias{write_fwf_blaise}
\title{Write a fixed width ascii datafile based on a given blaise datamodel}
\usage{
write_fwf_blaise(df, output_data, input_model, output_model = NULL,
  decimal.mark = ",", digits = getOption("digits"), justify = "left")
}
\arguments{
\item{df}{dataframe to write}

\item{output_data}{path and name to output datafile. Will add .asc if no extension}

\item{input_model}{the datamodel used to convert the dataframe and write the output}

\item{output_model}{path and name to output datamodel. If NULL will not write anything.
default is NULL}

\item{decimal.mark}{decimal mark to use. Default is ",".}

\item{justify}{direction of padding for STRING type when data is smaller than the width.
Defaults to right-justified (padded on the left), can be "left", "right" or "centre".}
}
\value{
dataframe written
}
\description{
Write a datafile in the blaise format (fwf ascii without separators)
using an existing datamodel. will not write out a datamodel unless explicitly asked to.
Tries to automatically match colummns by name using Levenshtein distance and will
change types if required
}
\details{
Currently supports the following dataformats:
\itemize{
  \item character = STRING,
  \item integer = INTEGER,
  \item numeric = REAL,
  \item Date = DATETYPE,
  \item factor = STRING
}
}
\examples{

}
